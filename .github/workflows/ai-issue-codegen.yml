name: AI Issue Codegen

on:
  issues:
    types: [opened, edited]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          pip install -r requirements.txt
          # requestsは不要（標準ライブラリのurllibを使用）

      - name: Initialize progress tracker
        run: |
          python scripts/progress_tracker.py ${{ github.event.issue.number }} init

      - name: Validate issue body
        id: validate
        env:
          ISSUE_BODY: ${{ github.event.issue.body }}
        run: |
          if [ -z "$ISSUE_BODY" ]; then
            echo "Issue body is empty" >&2
            exit 1
          fi
          echo "$ISSUE_BODY" | grep -Ei "scripts/|\.py|\.md|requirements\.txt|diff|patch" >/dev/null || {
            echo "No code keywords" >&2
            exit 1
          }
          echo "valid=true" >> "$GITHUB_OUTPUT"

      - name: Update progress - Analysis complete
        run: |
          python scripts/progress_tracker.py ${{ github.event.issue.number }} complete 0 true

      - name: Update progress - Validation complete
        if: steps.validate.outputs.valid == 'true'
        run: |
          python scripts/progress_tracker.py ${{ github.event.issue.number }} complete 1 true

      - name: Update progress - AI processing start
        if: steps.validate.outputs.valid == 'true'
        run: |
          python scripts/progress_tracker.py ${{ github.event.issue.number }} complete 2 true

      - name: Generate and apply patch
        id: codegen
        if: steps.validate.outputs.valid == 'true'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          AI_MODEL: gpt-4o
          ISSUE_BODY: ${{ github.event.issue.body }}
        run: |
          issue_body="$ISSUE_BODY"
          if [[ "$issue_body" != *"scripts/ai_issue_codegen.py"* ]]; then
            issue_body="$issue_body"$'\n'"scripts/ai_issue_codegen.py"
          fi
          echo "$issue_body" | python scripts/ai_issue_codegen.py --model gpt-4o
          echo "Code generation completed"

      - name: Detect changes
        id: changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Create pull request
        id: pr
        if: steps.changes.outputs.changed == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          ts=$(date +'%Y%m%d%H%M%S')
          branch="ai-codegen-${{ github.event.issue.number }}-$ts"
          git switch -c "$branch"
          git add -A
          git commit -m "feat: auto update for issue #${{ github.event.issue.number }}\n\nCo-authored-by: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>"
          git push -u origin "$branch"
          url=$(gh pr create --title "AI update for #${{ github.event.issue.number }}" --body "This PR was generated from issue #${{ github.event.issue.number }}.\n\n- [ ] Review changes\n- [ ] Run CI\n\nCo-authored-by: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>")
          echo "url=$url" >> "$GITHUB_OUTPUT"

      - name: Comment on issue
        if: always() && steps.validate.outputs.valid == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ steps.codegen.outcome }}" == "success" ] && [ "${{ steps.changes.outputs.changed }}" == "true" ]; then
            gh issue comment ${{ github.event.issue.number }} --body "🤖 **Code generation completed successfully.**\n\nPR created: ai-codegen-${{ github.event.issue.number }}\nModel: gpt-4o"
          elif [ "${{ steps.codegen.outcome }}" == "failure" ]; then
            gh issue comment ${{ github.event.issue.number }} --body "🤖 **Code generation failed.**\n\nPlease check the issue description and try again with more specific instructions."
          else
            gh issue comment ${{ github.event.issue.number }} --body "🤖 **Code generation completed but no changes detected.**\n\nPlease provide more specific modification instructions."
          fi
